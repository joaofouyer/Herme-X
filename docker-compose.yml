version: '3.4'

services:

  gateway:
    command: sh /code/start.sh
    build:
      context: .
      dockerfile: services/api_gateway/Dockerfile
    ports:
      - "8008:8008"
    depends_on:
      - db
    volumes:
      - ./services/api_gateway:/code
    environment:
      DEBUG: 1
      URL: http://gateway:8008/
      ALLOWED_HOSTS: "gateway"
      DB_NAME: 'postgres'
      DB_USER: 'postgres'
      DB_PASS: 'postgres'
      DB_ADDR: 'db'
      DB_PORT: '5432'

  location:
    command: sh /code/start.sh
    build:
      context: .
      dockerfile: services/location/Dockerfile
    ports:
      - "5050:5050"
    volumes:
      - ./services/location:/code
    environment:
      URL: http://location:5050/
      DB_NAME: 'postgres'
      DB_USER: 'postgres'
      DB_PASS: 'postgres'
      DB_ADDR: 'db'
      DB_PORT: '5432'

  clustering:
    command: sh /code/start.sh
    build:
      context: .
      dockerfile: services/clustering/Dockerfile
    ports:
      - "6060:6060"
    volumes:
      - ./services/clustering:/code
    environment:
      URL: http://clustering:6060/

  routering:
    command: sh /code/start.sh
    build:
      context: .
      dockerfile: services/routering/Dockerfile
    ports:
      - "7070:7070"
    volumes:
      - ./services/routering:/code
    environment:
      URL: http://routering:7070/

  db:
    image: postgres:11-alpine
    environment:
      POSTGRES_PASSWORD: postgres
    volumes:
      - hermex-data:/var/lib/postgresql/data
    ports:
      - '5432:5432'

  nginx:
    build:
      dockerfile: services/nginx/Dockerfile
      context: .
    ports:
    - "80:80"
    depends_on:
    - gateway

volumes:
  hermex-data: