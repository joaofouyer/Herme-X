Projeto hermeX
===============
.. image:: https://img.shields.io/badge/License-MIT-yellow.svg
   :alt: License: MIT
   :align: left
   :target: https://opensource.org/licenses/MIT

|

Prot√≥tipo desenvolvido para o Trabalho de Conclus√£o de Curso para o curso de Bacharel em Ci√™ncia da Computa√ß√£o na Pontif√≠cia Universidade Cat√≥lica de S√¢o Paulo (PUC-SP). Este projeto visa criar rotas para ve√≠culos compartilhados.

O projeto hermeX √© um sistema que conecta passageiros, motoristas e donos/administradores de ve√≠culos coletivos com o prop√≥sito de facilitar a cria√ß√£o e a manuten√ß√£o das rotas destes ve√≠culos na locomo√ß√£o di√°ria. O objetivo principal √© diminuir a dura√ß√£o total da locomo√ß√£o de cada passageiro e aumentar o n√∫mero de passageiros por ve√≠culos, respeitando sua capacidade.

-----------------------------------

Configura√ß√µes adicionais
========================
Para facilitar a configura√ß√£o do ambiente de desenvolvimento, este projeto utiliza Docker Compose. Se voc√™ n√£o est√° familiarizado ou n√£o tem Docker ou Docker Compose instalado, voc√™ pode consultar o `tutorial na documenta√ß√£o oficial`_.

- Instala√ß√£o do `Docker no Ubuntu`_
- Instala√ß√£o do `Docker no Windows`_
- Instala√ß√£o do `Docker Compose`_

Apesar de utilizar Docker, algumas vezes pode ser necess√°rio (ou simplesmente mais f√°cil) executar algum comando ou teste fora do container. Neste, caso √© recomendado instalar `virtualenv`_. Para criar um ambiente virtual com Python 3.6, basta executar :code:`virtualenv -p python3 hermex_env`



Configurando o Projeto
----------------------

Depois disto, basta:

1. Clonar este reposit√≥rio no seu diret√≥rio de trabalho: `https://github.com/joaofouyer/hermex.git`

2. No diret√≥rio raiz do projeto *(tcc)*, execute o comando `docker-compose build`

3. Para subir os *containers*, execute o comando `docker-compose up`.

Pronto, voc√™ j√° deve ter tudo configurado e rodando localmente em `localhost:8008`! |rocket|


------------------------------------


C√≥digo de Conduta
=================

1. Documenta√ß√£o
---------------

2. Diretrizes de C√≥digo
-----------------------

    A Foolish Consistency is the Hobgoblin of Little Minds

Se for utilizar alguma IDE que cria arquivos de configura√ß√£o (e.g. Visual Studio, PyCharm etc), lembre-se de adicionar os arquivos no `.gitignore`_.

Nos servi√ßos que s√£o implementados em Python, √© fortemente recomend√°vel seguir as especifica√ß√µes definidas (principalmente) no `PEP8`_. Algumas diretrizes b√°sicas:

- `Indenta√ß√£o com espa√ßo`_ √© recomend√°vel.
- Linhas de c√≥digo com at√© `79 caracteres`_.
- `UTF-8`_!!!!
- Uso de `espa√ßo em express√µes`_
- Nome de Classes `devem seguir a conven√ß√£o`_ CamelCase, `m√©todos e vari√°veis`_ devem ser lowercase.

Para Javascript, CSS e HTML √© recomend√°vel utilizar a `conven√ß√£o do Google`_.

3. Testes
----------


4. *Commits* e *Pull Requests*
------------------------------
O *commit* na master est√° fechado. Quando for desenvolver alguma funcionalidade nova √© necess√°rio criar uma nova branch, preferencialmente a partir da master (ou development, se necess√°rio). Ao terminar o trabalho, pode criar um pull-request para o development. S√≥ para lembrar:

- Para criar nova branch, basta dar um :code:`git pull` e :code:`git checkout -b <nome_da_feature>`
- Para subir, basta :code:`git push origin <nome_da_branch>`



Orientador:
-----------
`Prof. Dr. Carlos Eduardo de Barros Paes`_


Autores:
--------

`Caroline C. Appolinario`_ <caroline.appolinario@gmail.com>

Hector Rauer <hector.rauer@gmail.com>

`Jo√£o E. Fouyer`_ <jfouyer@gmail.com>


.. _Prof. Dr. Carlos Eduardo de Barros Paes: http://lattes.cnpq.br/6550336604432810
.. _Caroline C. Appolinario: http://lattes.cnpq.br/1746001355108337
.. _Jo√£o E. Fouyer: http://lattes.cnpq.br/9901346603428982
.. _tutorial na documenta√ß√£o oficial: https://docs.docker.com/compose/install/
.. _Docker no Ubuntu: https://docs.docker.com/install/linux/docker-ce/ubuntu/
.. _Docker no Windows: https://docs.docker.com/docker-for-windows/install/
.. _Docker Compose: https://docs.docker.com/compose/install/
.. _virtualenv: https://virtualenv.pypa.io/en/latest/installation/
.. _PEP8: https://www.python.org/dev/peps/pep-0008/
.. _Indenta√ß√£o com espa√ßo: https://www.python.org/dev/peps/pep-0008/#tabs-or-spaces
.. _79 caracteres: https://www.python.org/dev/peps/pep-0008/#maximum-line-length
.. _devem seguir a conven√ß√£o: https://www.python.org/dev/peps/pep-0008/#class-names
.. _UTF-8: https://www.python.org/dev/peps/pep-0008/#source-file-encoding
.. _espa√ßo em express√µes: https://www.python.org/dev/peps/pep-0008/#whitespace-in-expressions-and-statements
.. _m√©todos e vari√°veis: https://www.python.org/dev/peps/pep-0008/#function-and-variable-names
.. _.gitignore: https://www.gitignore.io/
.. _conven√ß√£o do Google: https://google.github.io/styleguide/jsguide.html


.. |rocket| replace:: üöÄ